---
repos:
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black

  - repo: https://gitlab.com/pycqa/flake8
    rev: 3.9.2
    hooks:
      - id: flake8

  - repo: https://github.com/timothycrosley/isort
    rev: 5.10.1
    hooks:
      - id: isort
        additional_dependencies: [toml]
        exclude: ^.*/?setup\.py$

  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-added-large-files    # prevents giant files from being committed.
      - id: check-ast    # simply checks whether the files parse as valid python.
      - id: check-byte-order-marker    # forbids files which have a utf-8 byte-order marker.
      # - id: check-builtin-literals  # requires literal syntax when initializing empty or zero python builtin types.
      # - id: check-case-conflict  # checks for files that would conflict in case-insensitive filesystems.
      - id: check-docstring-first    # checks a common error of defining a docstring after code.
      - id: check-executables-have-shebangs    # ensures that (non-binary) executables have a shebang.
      - id: check-json    # checks json files for parseable syntax.
      - id: check-shebang-scripts-are-executable    # ensures that (non-binary) files with a shebang are executable.
      - id: pretty-format-json    # sets a standard for formatting json files.
      - id: check-merge-conflict    # checks for files that contain merge conflict strings.
      - id: check-symlinks    # checks for symlinks which do not point to anything.
      - id: check-toml    # checks toml files for parseable syntax.
      # - id: check-vcs-permalinks  # ensures that links to vcs websites are permalinks.
      - id: check-xml    # checks xml files for parseable syntax.
      # - id: check-yaml    # checks yaml files for parseable syntax.
      - id: debug-statements    # checks for debugger imports and py37+ `breakpoint()` calls in python source.
      - id: destroyed-symlinks    # detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.
      - id: detect-aws-credentials    # detects *your* aws credentials from the aws cli credentials file.
      - id: detect-private-key    # detects the presence of private keys.
      # - id: double-quote-string-fixer    # replaces double quoted strings with single quoted strings.
      # - id: end-of-file-fixer  # ensures that a file is either empty, or ends with one newline.
      # - id: file-contents-sorter  # sorts the lines in specified files (defaults to alphabetical). you must provide list of target files as input in your .pre-commit-config.yaml file.
      # - id: fix-byte-order-marker  # removes utf-8 byte order marker.
      # - id: fix-encoding-pragma  # adds # -*- coding: utf-8 -*- to the top of python files.
      - id: forbid-new-submodules    # prevents addition of new git submodules.
      - id: mixed-line-ending    # replaces or checks mixed line ending.
      - id: name-tests-test    # this verifies that test files are named correctly.
      - id: no-commit-to-branch    # don't commit to branch
        args: [--branch, staging, --branch, prod]
      # - id: requirements-txt-fixer  # sorts entries in requirements.txt.
      # - id: sort-simple-yaml  # sorts simple yaml files which consist only of top-level keys, preserving comments and blocks.
      - id: trailing-whitespace    # trims trailing whitespace.

  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v0.961
  #   hooks:
  #     - id: mypy
  #       args: [--ignore-missing-imports]

  - repo: https://github.com/pre-commit/mirrors-pylint
    rev: v3.0.0a4
    hooks:
      - id: pylint
        args:
          - --rcfile=.pylintrc
          - --reports=no
          - --disable=W

  - repo: https://github.com/python-poetry/poetry
    rev: '1.2.0b2'
    hooks:
      - id: poetry-check
        # - id: poetry-lock

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.9.0
    hooks:
      - id: python-check-blanket-noqa    # Enforce that `noqa` annotations always occur with specific codes. Sample annotations: `# noqa: F401`, `# noqa: F401,W203`
      - id: python-check-blanket-type-ignore    # Enforce that `# type: ignore` annotations always occur with specific codes. Sample annotations: `# type: ignore[attr-defined]`, `# type: ignore[attr-defined, name-defined]`
      - id: python-check-mock-methods    # Prevent common mistakes of `assert mck.not_called()`, `assert mck.called_once_with(...)` and `mck.assert_called`.
      - id: python-no-eval    # A quick check for the `eval()` built-in function
      - id: python-no-log-warn    # A quick check for the deprecated `.warn()` method of python loggers
      - id: python-use-type-annotations    # Enforce that python3.6+ type annotations are used instead of type comments
      # - id: rst-backticks    # Detect common mistake of using single backticks when writing rst
      # - id: rst-directive-colons    # Detect mistake of rst directive not ending with double colon
      # - id: rst-inline-touching-normal    # Detect mistake of inline code touching normal text in rst
      - id: text-unicode-replacement-char    # Forbid files which have a UTF-8 Unicode replacement character

  - repo: https://github.com/Lucas-C/pre-commit-hooks
    rev: v1.2.0
    hooks:
      - id: forbid-crlf
      - id: remove-crlf
      - id: forbid-tabs
      - id: remove-tabs
        # args: [--whitespaces-count, '2']  # defaults to: 4
      # - id: insert-license
      #   files: \.groovy$
      #   args:
      #     - --license-filepath
      #     - src/license_header.txt        # defaults to: LICENSE.txt
      #     - --comment-style
      #     - //                            # defaults to:  #

  # - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
  #   rev: v1.2.4
  #   hooks:
  #     - id: python-safety-dependencies-check
  #       files: pyproject.toml

  # - repo: https://github.com/detailyang/pre-commit-shell
  #   rev: v1.0.6
  #   hooks:
  #     - id: shell-lint
  #       # args: [--format=json]

  - repo: https://github.com/pryorda/dockerfilelint-precommit-hooks
    rev: v0.1.0
    hooks:
      - id: dockerfilelint
        stages: [commit]

  - repo: https://github.com/aws-cloudformation/cfn-python-lint
    rev: v0.61.0  # The version of cfn-lint to use
    hooks:
      - id: cfn-python-lint
        files: infrastructure/.*\.(json|yml|yaml)$

  - repo: https://github.com/PyCQA/prospector
    rev: 1.7.7
    hooks:
      - id: prospector
        additional_dependencies:
          - ".[with_mypy]"
        args:
          - --summary-only
          - --zero-exit

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.2.0
    hooks:
      - id: detect-secrets
#     args: ['--baseline', '.secrets.baseline']
#     exclude: package.lock.json

# - repo: https://github.com/jendrikseipp/vulture
#   rev: 'v2.3'  # or any later Vulture version
#   hooks:
#     - id: vulture

# - repo: https://github.com/Lucas-C/pre-commit-hooks-bandit
#   rev: v1.0.5
#   hooks:
#   - id: python-bandit-vulnerability-check

#   - repo: https://github.com/sirwart/ripsecrets.git
#     # Set your version, be sure to use the latest and update regularly or use 'main'
#     rev: v0.1.3
#     hooks:
#     - id: ripsecrets

#  - repo: https://github.com/jumanjihouse/pre-commit-hook-yamlfmt
#    rev: 0.2.1    # or other specific tag
#    hooks:
#      - id: yamlfmt
#        args: [--mapping, '4', --sequence, '2', --offset, '2', --colons, --width, '150']

#   - repo: https://github.com/guykisel/prospector-mirror
#   rev: ''    # Use the sha / tag you want to point at
#   hooks:
#     - id: prospector

#   PEP 257 â€“ Docstring Conventions
#   - repo: https://github.com/FalconSocial/pre-commit-mirrors-pep257
#     rev: 'v0.3.3'  # Use the sha / tag you want to point at
#     hooks:
#       - id: pep257